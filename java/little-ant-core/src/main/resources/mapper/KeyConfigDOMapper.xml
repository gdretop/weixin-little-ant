<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ant.little.core.dao.KeyConfigDOMapper">
  <resultMap id="BaseResultMap" type="com.ant.little.core.domain.KeyConfigDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modifier" jdbcType="TIMESTAMP" property="gmtModifier" />
    <result column="env" jdbcType="VARCHAR" property="env" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modifier, env, appid, open_id, type, config_key, value
  </sql>
  <select id="selectByExample" parameterType="com.ant.little.core.domain.KeyConfigDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from key_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from key_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from key_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ant.little.core.domain.KeyConfigDOExample">
    delete from key_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ant.little.core.domain.KeyConfigDO">
    insert into key_config (id, gmt_create, gmt_modifier, 
      env, appid, open_id, 
      type, config_key, value
      )
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModifier,jdbcType=TIMESTAMP}, 
      #{env,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{configKey,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ant.little.core.domain.KeyConfigDO">
    insert into key_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModifier != null">
        gmt_modifier,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="configKey != null">
        config_key,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifier != null">
        #{gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="env != null">
        #{env,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ant.little.core.domain.KeyConfigDOExample" resultType="java.lang.Long">
    select count(*) from key_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update key_config
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.gmtCreate != null">
        gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.gmtModifier != null">
        gmt_modifier = #{row.gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="row.env != null">
        env = #{row.env,jdbcType=VARCHAR},
      </if>
      <if test="row.appid != null">
        appid = #{row.appid,jdbcType=VARCHAR},
      </if>
      <if test="row.openId != null">
        open_id = #{row.openId,jdbcType=VARCHAR},
      </if>
      <if test="row.type != null">
        type = #{row.type,jdbcType=VARCHAR},
      </if>
      <if test="row.configKey != null">
        config_key = #{row.configKey,jdbcType=VARCHAR},
      </if>
      <if test="row.value != null">
        value = #{row.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update key_config
    set id = #{row.id,jdbcType=BIGINT},
      gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifier = #{row.gmtModifier,jdbcType=TIMESTAMP},
      env = #{row.env,jdbcType=VARCHAR},
      appid = #{row.appid,jdbcType=VARCHAR},
      open_id = #{row.openId,jdbcType=VARCHAR},
      type = #{row.type,jdbcType=VARCHAR},
      config_key = #{row.configKey,jdbcType=VARCHAR},
      value = #{row.value,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ant.little.core.domain.KeyConfigDO">
    update key_config
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifier != null">
        gmt_modifier = #{gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ant.little.core.domain.KeyConfigDO">
    update key_config
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifier = #{gmtModifier,jdbcType=TIMESTAMP},
      env = #{env,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      config_key = #{configKey,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>