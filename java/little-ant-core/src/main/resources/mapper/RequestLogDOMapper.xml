<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ant.little.core.dao.RequestLogDOMapper">
  <resultMap id="BaseResultMap" type="com.ant.little.core.domain.RequestLogDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modifier" jdbcType="TIMESTAMP" property="gmtModifier" />
    <result column="env" jdbcType="VARCHAR" property="env" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="request_info" jdbcType="VARCHAR" property="requestInfo" />
    <result column="response_info" jdbcType="VARCHAR" property="responseInfo" />
    <result column="to_user_name" jdbcType="VARCHAR" property="toUserName" />
    <result column="from_user_name" jdbcType="VARCHAR" property="fromUserName" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="msg_type" jdbcType="VARCHAR" property="msgType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="wx_source" jdbcType="VARCHAR" property="wxSource" />
    <result column="real_ip" jdbcType="VARCHAR" property="realIp" />
    <result column="msg_id" jdbcType="BIGINT" property="msgId" />
    <result column="event" jdbcType="VARCHAR" property="event" />
    <result column="event_key" jdbcType="VARCHAR" property="eventKey" />
    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="precision" jdbcType="DOUBLE" property="precision" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, gmt_create, gmt_modifier, env, appid, request_info, response_info, to_user_name, 
    from_user_name, create_time, msg_type, content, wx_source, real_ip, msg_id, event, 
    event_key, ticket, latitude, longitude, precision
  </sql>
  <select id="selectByExample" parameterType="com.ant.little.core.domain.RequestLogDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from request_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from request_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from request_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ant.little.core.domain.RequestLogDOExample">
    delete from request_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ant.little.core.domain.RequestLogDO">
    insert into request_log (id, open_id, gmt_create, 
      gmt_modifier, env, appid, 
      request_info, response_info, to_user_name, 
      from_user_name, create_time, msg_type, 
      content, wx_source, real_ip, 
      msg_id, event, event_key, 
      ticket, latitude, longitude, 
      precision)
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModifier,jdbcType=TIMESTAMP}, #{env,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR}, 
      #{requestInfo,jdbcType=VARCHAR}, #{responseInfo,jdbcType=VARCHAR}, #{toUserName,jdbcType=VARCHAR}, 
      #{fromUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{msgType,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{wxSource,jdbcType=VARCHAR}, #{realIp,jdbcType=VARCHAR}, 
      #{msgId,jdbcType=BIGINT}, #{event,jdbcType=VARCHAR}, #{eventKey,jdbcType=VARCHAR}, 
      #{ticket,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, 
      #{precision,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.ant.little.core.domain.RequestLogDO">
    insert into request_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModifier != null">
        gmt_modifier,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="requestInfo != null">
        request_info,
      </if>
      <if test="responseInfo != null">
        response_info,
      </if>
      <if test="toUserName != null">
        to_user_name,
      </if>
      <if test="fromUserName != null">
        from_user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="wxSource != null">
        wx_source,
      </if>
      <if test="realIp != null">
        real_ip,
      </if>
      <if test="msgId != null">
        msg_id,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="eventKey != null">
        event_key,
      </if>
      <if test="ticket != null">
        ticket,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="precision != null">
        precision,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifier != null">
        #{gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="env != null">
        #{env,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="requestInfo != null">
        #{requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="responseInfo != null">
        #{responseInfo,jdbcType=VARCHAR},
      </if>
      <if test="toUserName != null">
        #{toUserName,jdbcType=VARCHAR},
      </if>
      <if test="fromUserName != null">
        #{fromUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="wxSource != null">
        #{wxSource,jdbcType=VARCHAR},
      </if>
      <if test="realIp != null">
        #{realIp,jdbcType=VARCHAR},
      </if>
      <if test="msgId != null">
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="event != null">
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="eventKey != null">
        #{eventKey,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null">
        #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="precision != null">
        #{precision,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ant.little.core.domain.RequestLogDOExample" resultType="java.lang.Long">
    select count(*) from request_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update request_log
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.openId != null">
        open_id = #{row.openId,jdbcType=VARCHAR},
      </if>
      <if test="row.gmtCreate != null">
        gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.gmtModifier != null">
        gmt_modifier = #{row.gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="row.env != null">
        env = #{row.env,jdbcType=VARCHAR},
      </if>
      <if test="row.appid != null">
        appid = #{row.appid,jdbcType=VARCHAR},
      </if>
      <if test="row.requestInfo != null">
        request_info = #{row.requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="row.responseInfo != null">
        response_info = #{row.responseInfo,jdbcType=VARCHAR},
      </if>
      <if test="row.toUserName != null">
        to_user_name = #{row.toUserName,jdbcType=VARCHAR},
      </if>
      <if test="row.fromUserName != null">
        from_user_name = #{row.fromUserName,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=BIGINT},
      </if>
      <if test="row.msgType != null">
        msg_type = #{row.msgType,jdbcType=VARCHAR},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=VARCHAR},
      </if>
      <if test="row.wxSource != null">
        wx_source = #{row.wxSource,jdbcType=VARCHAR},
      </if>
      <if test="row.realIp != null">
        real_ip = #{row.realIp,jdbcType=VARCHAR},
      </if>
      <if test="row.msgId != null">
        msg_id = #{row.msgId,jdbcType=BIGINT},
      </if>
      <if test="row.event != null">
        event = #{row.event,jdbcType=VARCHAR},
      </if>
      <if test="row.eventKey != null">
        event_key = #{row.eventKey,jdbcType=VARCHAR},
      </if>
      <if test="row.ticket != null">
        ticket = #{row.ticket,jdbcType=VARCHAR},
      </if>
      <if test="row.latitude != null">
        latitude = #{row.latitude,jdbcType=DOUBLE},
      </if>
      <if test="row.longitude != null">
        longitude = #{row.longitude,jdbcType=DOUBLE},
      </if>
      <if test="row.precision != null">
        precision = #{row.precision,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update request_log
    set id = #{row.id,jdbcType=BIGINT},
      open_id = #{row.openId,jdbcType=VARCHAR},
      gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifier = #{row.gmtModifier,jdbcType=TIMESTAMP},
      env = #{row.env,jdbcType=VARCHAR},
      appid = #{row.appid,jdbcType=VARCHAR},
      request_info = #{row.requestInfo,jdbcType=VARCHAR},
      response_info = #{row.responseInfo,jdbcType=VARCHAR},
      to_user_name = #{row.toUserName,jdbcType=VARCHAR},
      from_user_name = #{row.fromUserName,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=BIGINT},
      msg_type = #{row.msgType,jdbcType=VARCHAR},
      content = #{row.content,jdbcType=VARCHAR},
      wx_source = #{row.wxSource,jdbcType=VARCHAR},
      real_ip = #{row.realIp,jdbcType=VARCHAR},
      msg_id = #{row.msgId,jdbcType=BIGINT},
      event = #{row.event,jdbcType=VARCHAR},
      event_key = #{row.eventKey,jdbcType=VARCHAR},
      ticket = #{row.ticket,jdbcType=VARCHAR},
      latitude = #{row.latitude,jdbcType=DOUBLE},
      longitude = #{row.longitude,jdbcType=DOUBLE},
      precision = #{row.precision,jdbcType=DOUBLE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ant.little.core.domain.RequestLogDO">
    update request_log
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifier != null">
        gmt_modifier = #{gmtModifier,jdbcType=TIMESTAMP},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="requestInfo != null">
        request_info = #{requestInfo,jdbcType=VARCHAR},
      </if>
      <if test="responseInfo != null">
        response_info = #{responseInfo,jdbcType=VARCHAR},
      </if>
      <if test="toUserName != null">
        to_user_name = #{toUserName,jdbcType=VARCHAR},
      </if>
      <if test="fromUserName != null">
        from_user_name = #{fromUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="wxSource != null">
        wx_source = #{wxSource,jdbcType=VARCHAR},
      </if>
      <if test="realIp != null">
        real_ip = #{realIp,jdbcType=VARCHAR},
      </if>
      <if test="msgId != null">
        msg_id = #{msgId,jdbcType=BIGINT},
      </if>
      <if test="event != null">
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="eventKey != null">
        event_key = #{eventKey,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null">
        ticket = #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="precision != null">
        precision = #{precision,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ant.little.core.domain.RequestLogDO">
    update request_log
    set open_id = #{openId,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifier = #{gmtModifier,jdbcType=TIMESTAMP},
      env = #{env,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      request_info = #{requestInfo,jdbcType=VARCHAR},
      response_info = #{responseInfo,jdbcType=VARCHAR},
      to_user_name = #{toUserName,jdbcType=VARCHAR},
      from_user_name = #{fromUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      msg_type = #{msgType,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      wx_source = #{wxSource,jdbcType=VARCHAR},
      real_ip = #{realIp,jdbcType=VARCHAR},
      msg_id = #{msgId,jdbcType=BIGINT},
      event = #{event,jdbcType=VARCHAR},
      event_key = #{eventKey,jdbcType=VARCHAR},
      ticket = #{ticket,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      precision = #{precision,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>